/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2021-08-18 06:34:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import gamelogic.Room;
import cardTypes.Card;
import java.util.Vector;
import java.util.Map;
import gamelogic.Player;

public final class otherPlayersTurn_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>Wait For Your Turn</title>\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"../otherPlayersTurnStyle.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("  ");

    Room room = ((Map<String, Room>) pageContext.getServletContext().getAttribute("rooms"))
            .get(request.getSession().getAttribute("room-code"));
    Player[] players = room.getPlayers();
    Player currPlayer = players[room.getCurrentPlayerId()];
    Player player = null;
    String playerName = (String) request.getSession().getAttribute("username");
    for (int i = 0; i < players.length; i++) {
      if (players[i] != null && players[i].getUsername().equals(playerName)) {
        player = players[i];
        break;
      }
    }
    String event = "";
    String eventMessage = "";
    String victoryMessage = room.getWinnerName() + " WON!!!";
    if (room.getWinnerName().length() > 0) {
      event = "victory";
      if (room.getWinnerName().equals(playerName))
        victoryMessage = "YOU WON<br> CONGRATULATIONS!!!";
    } else if (player == null) {
      event = "none";
    } else if (currPlayer.getUsername().equals(player.getUsername())) {
      event = "your-turn";
    } else {
      event = player.getEvent();
      eventMessage = player.getEventMessage();
    }

    String[] circles = room.getCircleImages();
    String firstDie = room.getDieImages()[room.getFirstDie() - 1];
    String secondDie = room.getDieImages()[room.getSecondDie() - 1];
    Vector<String> log = room.getLog().getRecordings();
  
      out.write("\n");
      out.write("\n");
      out.write("  <p id=\"curr-player\">");
      out.print(currPlayer.getUsername());
      out.write("'s Turn</p>\n");
      out.write("  <input type=\"hidden\" id=\"event\" value=");
      out.print(event);
      out.write(">\n");
      out.write("\n");
      out.write("  <div class=\"circles\" style=\"height: 100%\">\n");
      out.write("    <img src=\"../board.png\" id=\"board\" height=\"100%\">\n");
      out.write("    ");

      for (int i = 0; i < players.length; i++) {
        if (players[i] != null) {
    
      out.write("\n");
      out.write("    <img class=\"circle\" src=");
      out.print( "../player-circles/" + circles[i] );
      out.write(" tile=");
      out.print(players[i].getTile());
      out.write(">\n");
      out.write("    ");

        }
      }
    
      out.write("\n");
      out.write("  </div>\n");
      out.write("\n");
      out.write("  <div class=\"dice\">\n");
      out.write("    <img id=\"first-die\" src=");
      out.print("../dice-images/" + firstDie);
      out.write(">\n");
      out.write("    <img id=\"second-die\" src=");
      out.print("../dice-images/" + secondDie);
      out.write(">\n");
      out.write("  </div>\n");
      out.write("\n");
      out.write("  <ol class=\"log\">\n");
      out.write("    ");
 for (int i = 0; i < log.size(); i++) { 
      out.write("\n");
      out.write("    <li><p>");
      out.print(log.get(i));
      out.write("</p></li>\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("  </ol>\n");
      out.write("\n");
      out.write("  ");
 if (event.equals("your-turn")) { 
      out.write("\n");
      out.write("  <div class=\"next-turn\">\n");
      out.write("    <form method=\"post\" action=\"/your-turn\">\n");
      out.write("      <button type=\"submit\">Begin Your Turn</button>\n");
      out.write("    </form>\n");
      out.write("  </div>\n");
      out.write("  ");
 } else if (event.equals("victory")) { 
      out.write("\n");
      out.write("    <div class=\"victory-screen\">\n");
      out.write("      <p id=\"victory-message\">");
      out.print(victoryMessage);
      out.write("</p>\n");
      out.write("      <form action=\"/returned-to-menu\" method=\"post\">\n");
      out.write("        <button id=\"return-to-menu\" type=\"submit\">Return To Main Menu</button>\n");
      out.write("      </form>\n");
      out.write("    </div>\n");
      out.write("  ");
 } else if (event.equals("trade")) { 
      out.write("\n");
      out.write("    <div class=\"confirm-trade\">\n");
      out.write("      <p id=\"trade-with\">");
      out.print(eventMessage);
      out.write("</p>\n");
      out.write("      <p id=\"offer\">Offer</p>\n");
      out.write("      <p id=\"demand\">Demand</p>\n");
      out.write("      <div class=\"cards\">\n");
      out.write("        <div>\n");
      out.write("          ");
 for (Card card : room.getTrade().getOfferedCards()) { 
      out.write("\n");
      out.write("          <img src=");
      out.print("../card-images/" + card.getCardImageName());
      out.write(">\n");
      out.write("          ");
 } 
      out.write("\n");
      out.write("        </div>\n");
      out.write("        <div>\n");
      out.write("          ");
 for (Card card : room.getTrade().getDemandedCards()) { 
      out.write("\n");
      out.write("          <img src=");
      out.print("../card-images/" + card.getCardImageName());
      out.write(">\n");
      out.write("          ");
 } 
      out.write("\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("      <p id=\"other-offerings\">\n");
      out.write("        Get Out of Jail Cards: ");
      out.print(room.getTrade().getOfferedGetOutOfJailCards());
      out.write("<br>Money:\n");
      out.write("        ");
      out.print(room.getTrade().getOfferedMoney());
      out.write("</p>\n");
      out.write("      <form method=\"post\" action=\"/trade-decided\">\n");
      out.write("        <button name=\"trade-button\" type=\"submit\" value=\"accepted\">Accept Trade</button>\n");
      out.write("      </form>\n");
      out.write("      <form method=\"post\" action=\"/trade-decided\">\n");
      out.write("        <button name=\"trade-button\" type=\"submit\" value=\"declined\">Decline Trade</button>\n");
      out.write("      </form>\n");
      out.write("      <p id=\"other-demands\">\n");
      out.write("        Get Out of Jail Cards: ");
      out.print(room.getTrade().getDemandedGetOutOfJailCards());
      out.write("<br>Money: ");
      out.print(
      room.getTrade().getDemandedMoney());
      out.write("</p>\n");
      out.write("    </div>\n");
      out.write("  ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("  <script src=\"../otherPlayersTurnScript.js\"></script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
